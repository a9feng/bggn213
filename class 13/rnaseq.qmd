---
title: "class 13: transcriptomics"
author: "Anqi Feng"
format: pdf
---
install.packages("BiocManager")
BiocManager::install()
# For this class we will need DESeq2:
BiocManager::install("DESeq2")

Today we will work with some bulk RNAseq data from Himes et al., where airway smooth muscle (asm) cells were treated with dexamethasone(dex) a synthetic glucocorticoid steriod with anti-inflammatory effects
```{r}
library(BiocManager)
library(DESeq2)
```
```{r}
counts <- read.csv("airway_scaledcounts.csv", row.names=1)
metadata <- read.csv("airway_metadata.csv")
head(counts)
head(metadata)
```
Q1 How many transcripts/genes are in the `counts` object?
There are `r nrow(counts)` genes in this dataset
Q2 How many controls are there 
```{r}
metadata$dex == "control"
```
```{r}
table(metadata$dex)
```
I want to compare "control" vs "treated"
1. Let's split the "counts" into `control.counts` and `treated.counts`
```{r}
metadata$id == colnames(counts)
```

```{r}
control.inds<-metadata$dex=="control"
```
Syntax with df[ROWs, COls]
```{r}
control.counts<- counts[,control.inds]
control.counts
```
For treated:
```{r}
treated.inds<- !control.inds
treated.counts<- counts[,treated.inds]
treated.counts
```
2. let's calculate the mean count per gene for "control" and "treated" - then we can compare these. Let's call it `control.mean` and `treated.mean`
```{r}
control.counts
control.mean <- apply(control.counts, 1, mean)
control.mean
```
```{r}
treated.mean <- apply(treated.counts, 1, mean)
treated.mean
```
put these together for ease of book-keeping
```{r}
meancounts <- data.frame(control.mean, treated.mean)
head(meancounts)
```
```{r}
plot(meancounts)
```
```{r}
plot(meancounts, log="xy")
```
We most often use log2 transforms here because it makes the math easier
Let's calculate the log2 fold change and add it to our table `meancounts`
```{r}
meancounts$log2fc<- log2(meancounts$treated.mean/meancounts$control.mean)
head(meancounts)
```
filter out all genes with zero counts in either control or treated
```{r}
to.rm<- rowSums(meancounts[,1:2] == 0)>0
mycounts<-meancounts[!to.rm, ]
mycounts
```
how many genes are left?
```{r}
nrow(mycounts)
```
>Q. How many "down" regulated genes do we have at the common log2 fold change value of -2...

```{r}
sum(mycounts$log2fc < -2)
```

>How many "up" at log2FC > +2

```{r}
sum(mycounts$log2fc > 2)
```
Do we trust these results? Is there anything missing?

We are missing the stats!
#DeSeq analysis
```{r}
#| message: false
library(DESeq2)
```
DESeq, like many Bioconductor packages, wants our input data in a very specific format
```{r}
dds <- DESeqDataSetFromMatrix(countData = counts,
                       colData = metadata, 
                       design = ~dex)
```
```{r}
dds <- DESeq(dds)
res<-results(dds)
```
```{r}
res
```
A common overview figure plots the logFC vs P-value
```{r}
mycols <- rep("gray", nrow(res))
mycols[res$log2FoldChange > 2] <- "red"
mycols[res$log2FoldChange < -2] <- "red"
mycols[res$padj>0.005] <-"gray"

plot(res$log2FoldChange, -log(res$padj), col=mycols)
abline(v=c(-2,2), col="gray")
abline(h=-log(0.005), col="gray")

```
```{r}
write.csv(res, file = "myresults.csv")
```

##Gene annotation
```{r}
head(res)
```
```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")
```
```{r}
columns(org.Hs.eg.db)
```
```{r}
res$symbol <- mapIds(org.Hs.eg.db,
                     keys=row.names(res), # Our genenames
                     keytype="ENSEMBL",       
                     column="SYMBOL",          
                     multiVals="first")
```
```{r}
head(res)
```
##Pathway analysis
A quick KEGG pathway analysis with the gage function

```{r}
library(pathview)
library(gage)
library(gageData)
data(kegg.sets.hs)

# Examine the first 2 pathways in this kegg set for humans
head(kegg.sets.hs, 2)
```
I need to speak ENTERZID so i can check KEGG pathway overlap as KEGG uses ENTREZ format IDS
```{r}
res$entrez <- mapIds(org.Hs.eg.db,
                     keys=row.names(res), # Our gene names
                     keytype="ENSEMBL",       
                     column="ENTREZID",          
                     multiVals="first")
```
i can now use the gage function to check for overlap with known KEGG pathways
```{r}
foldchanges<- res$log2FoldChange
names(foldchanges) <-res$entrez
head(foldchanges)
```
```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
head(keggres$less,3)
```

```{r}
attributes(keggres)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa05310")
```
![A pathway figure](hsa05310.pathview.png)




