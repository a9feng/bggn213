---
title: "Class 8"
author: "Anqi Feng"
format: pdf
---

Side_Note:

```{r}
head(mtcars)
```

```{r}
apply(mtcars,2 ,sd)
```

```{r}
pca <- prcomp(mtcars)
biplot(pca)
```

\^not very good! Let's rescale it

```{r}
mtscale <- scale(mtcars)
head(mtscale)
```

WHat is the mean of each "dimension"/column in mtscale? And SD?

```{r}
round(apply(mtscale,2 ,mean), 3)
```

```{r}
round(apply(mtscale,2 ,sd), 3)
```

Lets plot `mpg` vs `disp` for both mtcars and after the scaled data in `mtscale`

```{r}
library(ggplot2)
ggplot(mtcars)+
  aes(mpg, disp)+
  geom_point()
```

```{r}
library(ggplot2)
ggplot(mtscale)+
  aes(mpg, disp)+
  geom_point()
```

\^It's the same, except that it is centered on 0 = "scaled"

```{##Breast cancer}
```

```{r}
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)
```

```{r}
head(wisc.df)
```

```{r}
wisc.df$diagnosis
```

```{r}
nrow(wisc.df)
table(wisc.df$diagnosis)
```

Be sure to remove this diagnosis colum from our data to analyze

```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
# Create diagnosis vector for later 
diagnosis <- as.factor(wisc.df$diagnosis)
```

```{r}

length(grep("_mean",colnames(wisc.data)))
```

-   **Q1**. How many observations are in this dataset? 569

-   **Q2**. How many of the observations have a malignant diagnosis? 212

-   **Q3**. How many variables/features in the data are suffixed with `_mean`? 10

    ##Principal Component Analysis

We want to scale our data before PCA by setting the `scale=TRUE` argument!

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)
```

```{r}
wisc.pr <- prcomp(wisc.data, scale = T)
```

How much variance captured in each PC?

```{r}
x<-summary(wisc.pr)
x$importance
```

```{r}
plot(x$importance[2,],typ="b")
```

-   **Q4**. From your results, what proportion of the original variance is captured by the first principal components (PC1)? 44.27%

-   **Q5**. How many principal components (PCs) are required to describe at least 70% of the original variance in the data? 3

-   **Q6**. How many principal components (PCs) are required to describe at least 90% of the original variance in the data? 7

```{r}
biplot(wisc.pr)
```

```{r}
attributes(wisc.pr)
```

```{r}
head(wisc.pr$x)
```

My main PC results figure

```{r}
plot(wisc.pr$x, col=diagnosis, xlab="PC1", ylab = "PC2")
```

```{r}
plot(wisc.pr$x[,1:3], col=diagnosis, xlab="PC1", ylab = "PC3")
```

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

```{r}
## ggplot based graph
##install.packages("factoextra")
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```

##Hiearchical clustering

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
```

```{r}
data.dist <- dist(data.scaled)
head(data.dist)
```

```{r}
wisc.hclust <- hclust(data.dist, method = "complete" )
```

```{r}
plot(wisc.hclust)
abline(h=19, col = "red", lty=2)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust,k=4)
table(wisc.hclust.clusters, diagnosis)
```
Q11: optional - Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10? How do you judge the quality of your result in each case?
```{r}
# Loop through different values of k from 2 to 10
for (k in 2:10) {
  # Cut the tree into k clusters
  wisc.hclust.clusters <- cutree(wisc.hclust, k = k)
  
  # Create a comparison table
  comparison_table <- table(wisc.hclust.clusters, diagnosis)
  
  # Print the comparison table
  cat("Cluster Comparison for k =", k, ":\n")
  print(comparison_table)
  cat("\n")
}
```
Q12. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.
```{r}
  wisc.hclust <- hclust(data.dist, method = "ward.D2")
wisc.hclust.clusters <- cutree(wisc.hclust, k = 4)
table(wisc.hclust.clusters, diagnosis)
  
```
The method="ward.D2"creates groups such that variance is minimized within clusters. This has the effect of looking for spherical clusters with the process starting with all points in individual clusters (bottom up) and then repeatedly merging a pair of clusters such that when merged there is a minimum increase in total within-cluster variance This process continues until a single group including all points (the top of the tree) is defined.
```{r}

# Calculate the distances using the scaled PCA scores
data.dist_pca <- dist(wisc.pr$x[,1:7])

# Perform hierarchical clustering using Ward's method
wisc.pr.hclust <- hclust(data.dist_pca, method = "ward.D2")
plot(wisc.pr.hclust)
```
```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```
```{r}
table(grps, diagnosis)
```
```{r}
plot(wisc.pr$x[,1:2], col=grps)
```
```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```
```{r}
g <- as.factor(grps)
levels(g)
```
```{r}
g <- relevel(g,2)
levels(g)
```
```{r}
# Plot using our re-ordered factor 
plot(wisc.pr$x[,1:2], col=g)
```
```{r}
data.dist_7 <- dist(wisc.pr$x[,1:7])
wisc.pr.hclust_7 <- hclust(data.dist_7, method = "ward.D2")
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
table(wisc.pr.hclust.clusters, diagnosis)
```
Q13. How well does the newly created model with four clusters separate out the two diagnoses? strong separation

Q14. How well do the hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses. conmpare the heiarchical and k means with the PCA model. If the PCA shows a clearer separation between clusters and diagnosis, PCA has imporved clustering.
```{r}
table(wisc.hclust.clusters, diagnosis)
```
```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```
```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

Q16. Which of these new patients should we prioritize for follow up based on your results?
Depends on how close the patients are relatively to the malignent cluster (red) or benign (black), their priority differs: the closer they are to malignent, the higher prirority for follow-up, and the closer they are to benign, the lower the priority.
```{r}
sessionInfo()
```

